Nginx 配置 location 模块实现路由（反向代理、重定向）功能

我们访问一个网址，服务器返回对应的资源。那么一个网址是如何对应一个资源的呢？
用 Nginx 可以很好地帮我们实现路由功能，我们所有需要做的就是配置好 location 模块。

语法规则
 location [=|~|~*|^~] /uri/ {… }

符号	含义
=	精确匹配 
^~	非正则匹配
~	正则匹配（区分大小写）
~*	正则匹配（不区分大小写）
!~	正则不匹配（区分大小写）
!~*	正则不匹配（不区分大小写）
 	普通匹配（这里没有符号的时候）
=================================
server {
 
	listen       80;
	server_name  test.location.com;
 
	#精准匹配测试
	#第1，2条虽然匹配，但第三条是精准匹配，出第三条结果
	#测试路径/equal/a/b/c
	location ~ /equal/* {
		echo '/equal/*';
	}
	location /equal/a/b {
		echo '/equal/a/b';
	}
	location = /equal/a/b/c {
		echo '/equal/a/b/c';
	}
 
	#普通匹配测试
	#第1，2条虽然匹配，第三条匹配更长，出第三条结果
	#测试路径/match/a/b/c
	location /match/a {
		return 200  "/match/a";
	}
	location /match/a/b {
		return 200  "/match/a/b";	
	}
	location /match/a/b/c {
		 return 200  "/match/a/b/c";
	}
	location /match/a/b/c/d {
		return 200  "/match/a/b/c/d"; 
	}
 
	#正则匹配覆盖普通匹配,不会覆盖非正则匹配
	#访问/re/a.htm，会被后面的正则覆盖
	#访问/re/a/b开头的路径，不会被后面的正则覆盖
	location /re/a.htm {
		 echo 'match /re/a.htm';
	}
	location ^~ /re/a/b {
		echo 'math ^~/re/a/b*';		
	}
	location ~ /re/(.*)\.(htm|js|css)$ {
		echo "cover /re/$1.$2";
	}
 
	#正则匹配成功一条后，便不再走其它正则
	#测试路径/rex/a/b/c.htm
	location ~ /rex/.*\.(htm|js|css)$ {
		echo "match first";
	}
	location ~ /rex/a/(.*)\.(htm|js|css)$ {
		echo "match second";
	}
	location ~ /rex/a/b/(.*)\.(htm|js|css)$ {
		echo "match third";
	}
}

====================================

server {
        listen       80;
        server_name	test.location.com;
 
        本机ip地址：192.168.100.104
        #后端服务路径：
        http://192.168.100.105:8080/user/query?id=1
        
        #规则一：
        #访问路径：http://test.location.com/user/query?id=1
        location /user {
        #path1:/user path2:/query 
                          #ip:port 后面无 /
               proxy_pass http://192.168.0.105:8080;
        }
        
        规则二：
        #访问路径 ：http://test.location.com/A/user/query?id=1
        location /A/user {
        #path1:/A/user path2:/query 
                           #ip:port 后面有 /xxx
                proxy_pass http://192.168.0.105:8080/user;
        }
       
    }

==========================================

Nginx location 配置 后路径映射问题 （路径替换）
nginx 配置 proxy_pass时可以实现URL路径的部分替换。

1.proxy_pass的目标地址，默认不带/，表示只代理域名，url和querystring部分不会变（把请求的path拼接到proxy_pass目标域名之后作为代理的URL）

2.如果在目标地址后增加/，则表示把path中location匹配成功的部分剪切掉之后再拼接到proxy_pass目标地址

例子：

server {
        location  /abc {
                proxy_pass http://server_url;
        }

       location  /abc {
                proxy_pass http://server_url/;
        }
 }

比如请求 /abc/b.html

如上两个匹配成功后，实际代理的目标url分别是

http://server_url/abc/b.html (把/abc/b.html拼接到http://server_url之后)

http://server_url/b.html (把/abc/b.html的/abc去掉之后，拼接到http://server_url/之后)